# This workflow automatically creates a release PR for the CI integration.

name: Create Release PR

on:
  workflow_dispatch:
    inputs:
      semver:
        description: 'Semver argument for the version bump to do on the CI integration'
        default: 'minor'
        type: choice
        options:
          - 'minor'

permissions:
  contents: write
  pull-requests: write

jobs:
  create-release-pr:
    runs-on: ubuntu-latest
    steps:
      # Do the changes
      - uses: actions/checkout@v3
      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Create release branch
        run: git checkout -b local-branch
      - name: Set git user
        run: |
          git config user.name "GitHub Actions"
          git config user.email noreply@github.com
      - name: Install dependencies
        run: yarn install
      - name: Bump CI integration version
        run: yarn version --${{ github.event.inputs.semver }}
      - name: Update build files
        run: yarn build && yarn package
      - name: Amend version commit
        id: amend-version-commit
        run: |
          VERSION_TAG=$(git tag --points-at HEAD)
          git add --all
          git commit --amend --no-edit
          git tag --force $VERSION_TAG
          echo "VERSION_TAG=$VERSION_TAG" >> $GITHUB_OUTPUT
      - name: Push the branch (with tags)
        run: git push --follow-tags -u origin local-branch:release/${{ steps.amend-version-commit.outputs.VERSION_TAG }}

      # Create the pull request
      - name: Generate release notes
        id: generate-release-notes
        uses: actions/github-script@v6
        with:
          script: |
            const { data: releaseNotes } = await github.rest.repos.generateReleaseNotes({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: '${{ steps.amend-version-commit.outputs.VERSION_TAG }}',
            })

            return releaseNotes.body
      - name: Create pull request
        id: create-pull-request
        uses: actions/github-script@v6
        with:
          script: |
            const { data: pullRequest } = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              base: 'main',
              head: 'release/${{ steps.amend-version-commit.outputs.VERSION_TAG }}',
              title: '[release:${{ github.event.inputs.semver }}] `${{ steps.amend-version-commit.outputs.VERSION_TAG }}`',
              body: ${{ steps.generate-release-notes.outputs.result }}
            })

            return pullRequest.number
      - name: Create comment
        uses: actions/github-script@v6
        with:
          script: |
            const { releaseVersionComment } = require('./ci/pull-request-comments')

            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{steps.create-pull-request.outputs.result}},
              body: releaseVersionComment,
            })
